{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"semantic-ui-css/semantic.min.css\";import{Header,Container,Grid,Input,Button,Form,Modal,Message,Progress,Tab}from'semantic-ui-react';import'./App.css';import{getDecksFromUrl}from'./scraper';import DeckList from'./DeckList';var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasScraped=_useState2[0],setHasScraped=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),wotcUrl=_useState4[0],setWotcUrl=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),markup=_useState8[0],setMarkup=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),cardCounts=_useState10[0],setCardCounts=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),displayedDeck=_useState12[0],setDisplayedDeck=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),displayedDeckIndex=_useState14[0],setDisplayedDeckIndex=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),modalOpen=_useState16[0],setModalOpen=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),scrapeError=_useState18[0],setScrapeError=_useState18[1];useEffect(function(){if(results&&!hasScraped){setDisplayedDeck(results[0]);setDisplayedDeckIndex(0);}},[results,hasScraped]);var generateMarkupLine=function generateMarkupLine(result){var deck=result.deck,archetype=result.archetype,pilot=result.pilot,duplicatePilot=result.duplicatePilot,url=result.url;var muUrl=\"[\".concat(archetype||'archetype',\"](\").concat(url,\")\");var muPilot=\"**\".concat(pilot.replace(/[_]/g,\"\\\\_\")).concat(duplicatePilot?\" (duplicate pilot, link points to other list)\":\"\",\"**\");var highlights=[].concat(_toConsumableArray(deck.maindeck.filter(function(c){return c.highlighted;})),_toConsumableArray(deck.sideboard.filter(function(c){return c.highlighted;}))).map(function(c){return c.name;});var muHighlights=\"(\".concat(Array.from(new Set(highlights)).join(\", \"),\")\");return\"* \".concat(muUrl,\": \").concat(muPilot,\" \").concat(highlights.length?muHighlights:\"\");};var generateMarkup=function generateMarkup(results){var mu=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=results[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var result=_step.value;var muString=generateMarkupLine(result);mu.push(muString);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}setMarkup(mu);};var generateCardCounts=function generateCardCounts(results){var counts=[];results.forEach(function(r){r.deck.maindeck.forEach(function(card){var countRow=counts.find(function(c){return c.card.name===card.name;});if(!countRow){counts.push({card:{name:card.name,count:card.count,highlighted:false},deckCount:1});}else{countRow.card.count+=card.count;countRow.deckCount++;}});r.deck.sideboard.forEach(function(card){var countRow=counts.find(function(c){return c.card.name===card.name;});if(!countRow){counts.push({card:{name:card.name,count:card.count,highlighted:false},deckCount:1});}else{countRow.card.count+=card.count;if(!r.deck.maindeck.find(function(c){return c.name===card.name;})){countRow.deckCount++;}}});});counts.sort(function(a,b){return b.card.count-a.card.count;});setCardCounts(counts.map(function(c){return\"\".concat(c.card.count,\" cop\").concat(c.card.count>1?'ies':'y',\" of \").concat(c.card.name,\" in \").concat(c.deckCount,\" deck\").concat(c.deckCount>1?'s':'');}));};var scrape=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var scrapedResults;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getDecksFromUrl(wotcUrl);case 3:scrapedResults=_context.sent;generateMarkup(scrapedResults);generateCardCounts(scrapedResults);setResults(scrapedResults);setHasScraped(true);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);setScrapeError(true);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function scrape(){return _ref.apply(this,arguments);};}();var goToNextDeck=function goToNextDeck(){if(!displayedDeck){return;}var index=displayedDeckIndex;var res=_toConsumableArray(results);res[index]=displayedDeck;setResults(res);var mu=markup;mu[index]=generateMarkupLine(displayedDeck);setMarkup(mu);if(index+2<results.length){console.log(results[index]);setDisplayedDeck(results[index+1]);setDisplayedDeckIndex(index+1);}else{setModalOpen(false);}};var goToPreviousDeck=function goToPreviousDeck(){if(!displayedDeck){return;}var index=displayedDeckIndex;var res=_toConsumableArray(results);res[index]=displayedDeck;setResults(res);var mu=_toConsumableArray(markup);mu[index]=generateMarkupLine(displayedDeck);setMarkup(mu);if(index!==0){console.log(results[index-1]);setDisplayedDeck(results[index-1]);setDisplayedDeckIndex(index-1);}else{setModalOpen(false);}};var panes=[{menuItem:'Markdown',pane:React.createElement(Tab.Pane,null,React.createElement(Form,null,React.createElement(Form.TextArea,{value:markup===null||markup===void 0?void 0:markup.join(\"\\r\\n\"),style:{height:500}})))},{menuItem:'Card Counts',pane:React.createElement(Tab.Pane,null,React.createElement(Form,null,React.createElement(Form.TextArea,{value:cardCounts===null||cardCounts===void 0?void 0:cardCounts.join(\"\\r\\n\"),style:{height:500}})))}];return React.createElement(Container,{className:\"App\"},React.createElement(Header,null,\"Scraper\"),React.createElement(Grid,{columns:16},React.createElement(Grid.Row,null,React.createElement(Grid.Column,{width:3,textAlign:\"left\"},React.createElement(Input,{value:wotcUrl,onChange:function onChange(e){return setWotcUrl(e.target.value);},placeholder:\"Deck Dump URL\"}),React.createElement(\"a\",{href:\"https://magic.wizards.com/en/content/deck-lists-magic-online-products-game-info\",target:\"_blank\",style:{marginLeft:'1em'}},\"MTGO Results\")),React.createElement(Grid.Column,{width:2,textAlign:\"left\"},React.createElement(Button,{onClick:scrape,content:\"Scrape\"})),React.createElement(Grid.Column,{width:2,textAlign:\"left\"},React.createElement(Button,{onClick:function onClick(){return setModalOpen(true);},content:\"Walkthrough\"}))),React.createElement(Grid.Row,null,React.createElement(Grid.Column,{width:16},scrapeError&&React.createElement(Message,{negative:true},React.createElement(\"p\",null,\"There was an error while attempting to scrape results. Please try again later\")),React.createElement(Tab,{panes:panes,renderActiveOnly:false})))),React.createElement(Modal,{open:modalOpen&&!!displayedDeck,centered:false,onClose:function onClose(){return setModalOpen(false);},closeOnDimmerClick:false,closeIcon:true},React.createElement(Modal.Content,null,displayedDeck&&React.createElement(DeckList,{result:displayedDeck,goToNextDeck:goToNextDeck,goToPreviousDeck:goToPreviousDeck,setDisplayedDeck:setDisplayedDeck}),React.createElement(Progress,{value:displayedDeckIndex,total:results.length,progress:\"ratio\",style:{marginTop:'1em',marginBottom:0}}))));};export default App;","map":{"version":3,"sources":["C:/Git/guided-scraper/src/App.tsx"],"names":["React","useState","useEffect","Header","Container","Grid","Input","Button","Form","Modal","Message","Progress","Tab","getDecksFromUrl","DeckList","App","hasScraped","setHasScraped","wotcUrl","setWotcUrl","results","setResults","markup","setMarkup","cardCounts","setCardCounts","displayedDeck","setDisplayedDeck","displayedDeckIndex","setDisplayedDeckIndex","modalOpen","setModalOpen","scrapeError","setScrapeError","generateMarkupLine","result","deck","archetype","pilot","duplicatePilot","url","muUrl","muPilot","replace","highlights","maindeck","filter","c","highlighted","sideboard","map","name","muHighlights","Array","from","Set","join","length","generateMarkup","mu","muString","push","generateCardCounts","counts","forEach","r","card","countRow","find","count","deckCount","sort","a","b","scrape","scrapedResults","goToNextDeck","index","res","console","log","goToPreviousDeck","panes","menuItem","pane","height","e","target","value","marginLeft","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"semantic-ui-css/semantic.min.css\"\r\nimport { Header, Container, Grid, Input, Button, Form, Modal, Message, Progress, Tab } from 'semantic-ui-react'\r\nimport './App.css';\r\nimport { getDecksFromUrl } from './scraper'\r\nimport { Result, Card } from './types'\r\nimport DeckList from './DeckList'\r\n\r\nconst App: React.FC = () => {\r\n  const [hasScraped, setHasScraped] = useState<boolean>(false)\r\n  const [wotcUrl, setWotcUrl] = useState<string>(\"\");\r\n  const [results, setResults] = useState<Result[]>([]);\r\n  const [markup, setMarkup] = useState<string[]>([]);\r\n  const [cardCounts, setCardCounts] = useState<string[]>([]);\r\n  const [displayedDeck, setDisplayedDeck] = useState<Result>();\r\n  const [displayedDeckIndex, setDisplayedDeckIndex] = useState<number>();\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n  const [scrapeError, setScrapeError] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (results && !hasScraped) {\r\n      setDisplayedDeck(results[0])\r\n      setDisplayedDeckIndex(0)\r\n    }\r\n  }, [results, hasScraped]);\r\n\r\n  const generateMarkupLine = (result: Result): string => {\r\n    const { deck, archetype, pilot, duplicatePilot, url } = result\r\n\r\n    const muUrl = `[${archetype || 'archetype'}](${url})`\r\n    const muPilot = `**${pilot.replace(/[_]/g, \"\\\\_\")}${\r\n      duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"}**`\r\n\r\n    const highlights = [...deck.maindeck.filter(c => c.highlighted), ...deck.sideboard.filter(c => c.highlighted)].map(c => c.name)\r\n    const muHighlights = `(${Array.from(new Set(highlights)).join(\", \")})`\r\n    return `* ${muUrl}: ${muPilot} ${highlights.length ? muHighlights : \"\"}`\r\n  }\r\n\r\n  const generateMarkup = (results: Result[]) => {\r\n    const mu: string[] = [];\r\n    for (const result of results) {\r\n      const muString = generateMarkupLine(result)\r\n      mu.push(muString)\r\n    }\r\n    setMarkup(mu);\r\n  }\r\n\r\n  const generateCardCounts = (results: Result[]) => {\r\n    const counts: { card: Card, deckCount: number }[] = []\r\n    results.forEach(r => {\r\n      r.deck.maindeck.forEach(card => {\r\n        const countRow = counts.find(c => c.card.name === card.name);\r\n        if (!countRow) {\r\n          counts.push({\r\n            card: { name: card.name, count: card.count, highlighted: false },\r\n            deckCount: 1\r\n          })\r\n        }\r\n        else {\r\n          countRow.card.count += card.count;\r\n          countRow.deckCount++;\r\n        }\r\n      })\r\n\r\n      r.deck.sideboard.forEach(card => {\r\n        const countRow = counts.find(c => c.card.name === card.name);\r\n        if (!countRow) {\r\n          counts.push({\r\n            card: { name: card.name, count: card.count, highlighted: false },\r\n            deckCount: 1\r\n          })\r\n        }\r\n        else {\r\n          countRow.card.count += card.count;\r\n          if (!r.deck.maindeck.find(c => c.name === card.name)) {\r\n            countRow.deckCount++;\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    counts.sort((a, b) => b.card.count - a.card.count)\r\n    setCardCounts(counts.map(c => `${c.card.count} cop${c.card.count > 1 ? 'ies' : 'y'} of ${c.card.name} in ${c.deckCount} deck${c.deckCount > 1 ? 's' : ''}`))\r\n  }\r\n\r\n\r\n  const scrape = async () => {\r\n    try {\r\n      const scrapedResults = await getDecksFromUrl(wotcUrl);\r\n      generateMarkup(scrapedResults);\r\n      generateCardCounts(scrapedResults);\r\n      setResults(scrapedResults);\r\n      setHasScraped(true);\r\n    } catch (error) {\r\n      setScrapeError(true)\r\n    }\r\n  }\r\n\r\n  const goToNextDeck = () => {\r\n    if (!displayedDeck) {\r\n      return\r\n    }\r\n    const index = displayedDeckIndex!\r\n\r\n    const res = [...results]\r\n    res[index] = displayedDeck;\r\n    setResults(res);\r\n\r\n    const mu = markup\r\n    mu[index] = generateMarkupLine(displayedDeck)\r\n    setMarkup(mu)\r\n    if (index + 2 < results.length) {\r\n      console.log(results[index])\r\n      setDisplayedDeck(results[index + 1])\r\n      setDisplayedDeckIndex(index + 1);\r\n    }\r\n    else {\r\n      setModalOpen(false);\r\n    }\r\n  }\r\n\r\n  const goToPreviousDeck = () => {\r\n    if (!displayedDeck) {\r\n      return\r\n    }\r\n    const index = displayedDeckIndex!\r\n\r\n    const res = [...results]\r\n    res[index] = displayedDeck;\r\n    setResults(res);\r\n\r\n    const mu = [...markup]\r\n    mu[index] = generateMarkupLine(displayedDeck)\r\n    setMarkup(mu)\r\n\r\n    if (index !== 0) {\r\n      console.log(results[index - 1])\r\n      setDisplayedDeck(results[index - 1])\r\n      setDisplayedDeckIndex(index - 1);\r\n    }\r\n    else {\r\n      setModalOpen(false);\r\n    }\r\n  }\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: 'Markdown', pane:\r\n        <Tab.Pane>\r\n          <Form>\r\n            <Form.TextArea value={markup?.join(\"\\r\\n\")} style={{ height: 500 }} />\r\n          </Form>\r\n        </Tab.Pane>\r\n    },\r\n    {\r\n      menuItem: 'Card Counts', pane:\r\n        <Tab.Pane>\r\n          <Form>\r\n            <Form.TextArea value={cardCounts?.join(\"\\r\\n\")} style={{ height: 500 }} />\r\n          </Form>\r\n        </Tab.Pane>\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Container className=\"App\">\r\n      <Header>Scraper</Header>\r\n      <Grid columns={16}>\r\n        <Grid.Row>\r\n          <Grid.Column width={3} textAlign=\"left\">\r\n            <Input value={wotcUrl} onChange={(e) => setWotcUrl(e.target.value)} placeholder=\"Deck Dump URL\" />\r\n            <a\r\n              href='https://magic.wizards.com/en/content/deck-lists-magic-online-products-game-info'\r\n              target='_blank'\r\n              style={{ marginLeft: '1em' }}>\r\n              MTGO Results\r\n            </a>\r\n          </Grid.Column>\r\n          <Grid.Column width={2} textAlign=\"left\">\r\n            <Button onClick={scrape} content=\"Scrape\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={2} textAlign=\"left\">\r\n            <Button onClick={() => (setModalOpen(true))} content=\"Walkthrough\" />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row>\r\n          <Grid.Column width={16}>\r\n            {scrapeError &&\r\n              <Message negative>\r\n                <p>There was an error while attempting to scrape results. Please try again later</p>\r\n              </Message>\r\n            }\r\n            <Tab panes={panes} renderActiveOnly={false} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <Modal\r\n        open={modalOpen && !!displayedDeck}\r\n        centered={false}\r\n        onClose={() => setModalOpen(false)}\r\n        closeOnDimmerClick={false}\r\n        closeIcon>\r\n        <Modal.Content>\r\n          {displayedDeck &&\r\n            <DeckList result={displayedDeck} goToNextDeck={goToNextDeck} goToPreviousDeck={goToPreviousDeck} setDisplayedDeck={setDisplayedDeck} />\r\n          }\r\n          <Progress value={displayedDeckIndex} total={results.length} progress='ratio' style={{ marginTop: '1em', marginBottom: 0 }} />\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}