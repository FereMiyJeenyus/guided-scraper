{"ast":null,"code":"import _slicedToArray from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import\"semantic-ui-css/semantic.min.css\";import{Header,Container,Grid,Input,Button}from'semantic-ui-react';import'./App.css';import{getDecksFromUrl}from'./scraper';var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasScraped=_useState2[0],setHasScraped=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),wotcUrl=_useState4[0],setWotcUrl=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),markup=_useState8[0],setMarkup=_useState8[1];var scrape=function scrape(){var scrapedResults=getDecksFromUrl(wotcUrl);var usernames=scrapedResults.map(function(r){return r.pilot;});var mu=scrapedResults.map(function(result){var link=wotcUrl.includes('events/coverage')?\"* [\".concat(result.pilot.replace(/[_]/g,\"\\\\_\").split(' - ')[1],\"](\").concat(result.url,\"): **\").concat(result.pilot.replace(/[_]/g,\"\\\\_\").split(' - ')[0]).concat(usernames.includes(result.pilot)?\" (duplicate pilot, link points to other list)\":\"\",\"**\"):\"* [archetype](\".concat(result.url,\"): **\").concat(result.pilot.replace(/[_]/g,\"\\\\_\")).concat(usernames.includes(result.pilot)?\" (duplicate pilot, link points to other list)\":\"\",\"**\");usernames.push(result.pilot);return link;});setResults(scrapedResults);setMarkup(mu.join(\"\\r\\n\"));};return React.createElement(Container,{className:\"App\"},React.createElement(Header,null,\"Scraper\"),React.createElement(Grid,{columns:2,divided:true},React.createElement(Input,{value:wotcUrl,onChange:function onChange(e){return setWotcUrl(e.target.value);}}),React.createElement(Button,{onClick:scrape}),React.createElement(Container,null,markup)));};export default App;","map":{"version":3,"sources":["C:/Git/guided-scraper/src/App.tsx"],"names":["React","useState","Header","Container","Grid","Input","Button","getDecksFromUrl","App","hasScraped","setHasScraped","wotcUrl","setWotcUrl","results","setResults","markup","setMarkup","scrape","scrapedResults","usernames","map","r","pilot","mu","result","link","includes","replace","split","url","push","join","e","target","value"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,kCAAP,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,IAA5B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAiE,mBAAjE,CACA,MAAO,WAAP,CACA,OAASC,eAAT,KAAgC,WAAhC,CAEA,GAAMC,CAAAA,GAAa,CAAG,QAAhBA,CAAAA,GAAgB,EAAM,eACUP,QAAQ,CAAU,KAAV,CADlB,wCACnBQ,UADmB,eACPC,aADO,8BAEIT,QAAQ,CAAS,EAAT,CAFZ,yCAEnBU,OAFmB,eAEVC,UAFU,8BAGIX,QAAQ,CAAW,EAAX,CAHZ,yCAGnBY,OAHmB,eAGVC,UAHU,8BAIEb,QAAQ,CAAS,EAAT,CAJV,yCAInBc,MAJmB,eAIXC,SAJW,eAM1B,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,cAAc,CAAGX,eAAe,CAACI,OAAD,CAAtC,CACA,GAAMQ,CAAAA,SAAS,CAAGD,cAAc,CAACE,GAAf,CAAmB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,KAAN,EAApB,CAAlB,CACA,GAAMC,CAAAA,EAAE,CAAGL,cAAc,CAACE,GAAf,CAAmB,SAAAI,MAAM,CAAI,CACtC,GAAMC,CAAAA,IAAI,CAAGd,OAAO,CAACe,QAAR,CAAiB,iBAAjB,eAA4CF,MAAM,CAACF,KAAP,CAAaK,OAAb,CAAqB,MAArB,CAA6B,KAA7B,EAAoCC,KAApC,CAA0C,KAA1C,EAAiD,CAAjD,CAA5C,cAAoGJ,MAAM,CAACK,GAA3G,iBAAsHL,MAAM,CAACF,KAAP,CAAaK,OAAb,CAAqB,MAArB,CAA6B,KAA7B,EAAoCC,KAApC,CAA0C,KAA1C,EAAiD,CAAjD,CAAtH,SACXT,SAAS,CAACO,QAAV,CAAmBF,MAAM,CAACF,KAA1B,EAAmC,+CAAnC,CAAqF,EAD1E,+BAGME,MAAM,CAACK,GAHb,iBAGwBL,MAAM,CAACF,KAAP,CAAaK,OAAb,CAAqB,MAArB,CAA6B,KAA7B,CAHxB,SAIXR,SAAS,CAACO,QAAV,CAAmBF,MAAM,CAACF,KAA1B,EAAmC,+CAAnC,CAAqF,EAJ1E,MAAb,CAMAH,SAAS,CAACW,IAAV,CAAeN,MAAM,CAACF,KAAtB,EACA,MAAOG,CAAAA,IAAP,CACD,CATU,CAAX,CAUAX,UAAU,CAACI,cAAD,CAAV,CACAF,SAAS,CAACO,EAAE,CAACQ,IAAH,CAAQ,MAAR,CAAD,CAAT,CACD,CAfD,CAiBA,MACE,qBAAC,SAAD,EAAW,SAAS,CAAC,KAArB,EACE,oBAAC,MAAD,gBADF,CAEE,oBAAC,IAAD,EAAM,OAAO,CAAE,CAAf,CAAkB,OAAO,KAAzB,EACE,oBAAC,KAAD,EAAO,KAAK,CAAEpB,OAAd,CAAuB,QAAQ,CAAE,kBAACqB,CAAD,QAAOpB,CAAAA,UAAU,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EAAjC,EADF,CAEE,oBAAC,MAAD,EAAQ,OAAO,CAAEjB,MAAjB,EAFF,CAGE,oBAAC,SAAD,MAAYF,MAAZ,CAHF,CAFF,CADF,CAUD,CAjCD,CAmCA,cAAeP,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport \"semantic-ui-css/semantic.min.css\"\nimport { Header, Container, Grid, Input, Button, TextArea } from 'semantic-ui-react'\nimport './App.css';\nimport { getDecksFromUrl } from './scraper'\n\nconst App: React.FC = () => {\n  const [hasScraped, setHasScraped] = useState<boolean>(false)\n  const [wotcUrl, setWotcUrl] = useState<string>(\"\");\n  const [results, setResults] = useState<Result[]>([]);\n  const [markup, setMarkup] = useState<string>(\"\");\n\n  const scrape = () => {\n    const scrapedResults = getDecksFromUrl(wotcUrl);\n    const usernames = scrapedResults.map(r => r.pilot);\n    const mu = scrapedResults.map(result => {\n      const link = wotcUrl.includes('events/coverage') ? `* [${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[1]}](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[0]}${\n        usernames.includes(result.pilot) ? \" (duplicate pilot, link points to other list)\" : \"\"\n        }**` :\n        `* [archetype](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\")}${\n        usernames.includes(result.pilot) ? \" (duplicate pilot, link points to other list)\" : \"\"\n        }**`;\n      usernames.push(result.pilot);\n      return link;\n    });\n    setResults(scrapedResults);\n    setMarkup(mu.join(\"\\r\\n\"));\n  }\n\n  return (\n    <Container className=\"App\">\n      <Header>Scraper</Header>\n      <Grid columns={2} divided >\n        <Input value={wotcUrl} onChange={(e) => setWotcUrl(e.target.value)}></Input>\n        <Button onClick={scrape}></Button>\n        <Container>{markup}</Container>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}