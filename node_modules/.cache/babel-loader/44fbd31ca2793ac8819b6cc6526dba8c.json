{"ast":null,"code":"import*as rp from\"request-promise\";import*as cheerio from\"cheerio\";var regex=/[^A-Za-z _-]/g;var cardNameRegex=/[^A-Za-z /]/g;var spaces=/ /g;export var getDecksFromUrl=function getDecksFromUrl(wotcUrl){var results=[];if(wotcUrl.startsWith(\"https://magic.wizards.com\")){var options={uri:\"https://cors-anywhere.herokuapp.com/\".concat(wotcUrl),headers:{'Origin':'https://feremiyjeenyus.github.io/mtgo-results-scraper/'},transform:function transform(body){return cheerio.load(body);}};rp.default(options).then(function($){$(\".deck-group\").each(function(){var headerContent=$(this).find(\"h4\").text();var username=headerContent.split(\" (\")[0];var parts=headerContent.split(\" (\");var name=parts[0];var chaff=\"\";if(parts[1]){chaff=parts[1].replace(regex,\"\").replace(spaces,\"_\").toLowerCase();}var url=\"\".concat(wotcUrl,\"#\").concat(name.replace(regex,\"\").replace(spaces,\"_\").toLowerCase()).concat(chaff?\"_\"+chaff:\"\");var deck={maindeck:[],sideboard:[]};$(this).find(\".sorted-by-overview-container\").find(\".row\").each(function(){deck.maindeck.push({name:$(this).find(\".card-name\").text().toUpperCase().trim().replace(cardNameRegex,\"\"),count:parseInt($(this).find(\".card-count\").text(),10)});});$(this).find(\".sorted-by-sideboard-container\").find(\".row\").each(function(){deck.sideboard.push({name:$(this).find(\".card-name\").text().toUpperCase().trim().replace(cardNameRegex,\"\"),count:parseInt($(this).find(\".card-count\").text(),10)});});results.push({pilot:username,url:url,deck:deck});});}).catch(function(err){console.log(err);});}return results;};","map":{"version":3,"sources":["C:/Git/guided-scraper/src/scraper.ts"],"names":["rp","cheerio","regex","cardNameRegex","spaces","getDecksFromUrl","wotcUrl","results","startsWith","options","uri","headers","transform","body","load","default","then","$","each","headerContent","find","text","username","split","parts","name","chaff","replace","toLowerCase","url","deck","maindeck","sideboard","push","toUpperCase","trim","count","parseInt","pilot","catch","err","console","log"],"mappings":"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","sourcesContent":["import * as rp from \"request-promise\";\r\nimport * as cheerio from \"cheerio\";\r\n\r\nconst regex = /[^A-Za-z _-]/g;\r\nconst cardNameRegex = /[^A-Za-z /]/g;\r\nconst spaces = / /g;\r\n\r\nexport const getDecksFromUrl = (wotcUrl: string): Result[] => {\r\n    const results: Result[] = [];\r\n    if (wotcUrl.startsWith(\"https://magic.wizards.com\")) {\r\n        const options = {\r\n            uri: `https://cors-anywhere.herokuapp.com/${wotcUrl}`,\r\n            headers: { 'Origin': 'https://feremiyjeenyus.github.io/mtgo-results-scraper/' },\r\n            transform: function (body: any) {\r\n                return cheerio.load(body);\r\n            }\r\n        };\r\n\r\n        rp.default(options)\r\n            .then($ => {\r\n                $(\".deck-group\").each(function (this: any) {\r\n                    const headerContent = $(this)\r\n                        .find(\"h4\")\r\n                        .text();\r\n                    const username = headerContent.split(\" (\")[0];\r\n                    const parts = headerContent.split(\" (\");\r\n                    const name = parts[0];\r\n                    let chaff = \"\";\r\n                    if (parts[1]) {\r\n                        chaff = parts[1]\r\n                            .replace(regex, \"\")\r\n                            .replace(spaces, \"_\")\r\n                            .toLowerCase();\r\n                    }\r\n                    const url = `${wotcUrl}#${name\r\n                        .replace(regex, \"\")\r\n                        .replace(spaces, \"_\")\r\n                        .toLowerCase()}${chaff ? \"_\" + chaff : \"\"}`;\r\n\r\n                    const deck: Deck = {\r\n                        maindeck: [],\r\n                        sideboard: []\r\n                    };\r\n                    $(this).find(\".sorted-by-overview-container\").find(\".row\").each(function (this: any) {\r\n                        deck.maindeck.push(\r\n                            {\r\n                                name: $(this).find(\".card-name\").text().toUpperCase().trim().replace(cardNameRegex, \"\"),\r\n                                count: parseInt($(this).find(\".card-count\").text(), 10)\r\n                            }\r\n                        )\r\n                    })\r\n\r\n                    $(this).find(\".sorted-by-sideboard-container\").find(\".row\").each(function (this: any) {\r\n                        deck.sideboard.push({\r\n                            name: $(this).find(\".card-name\").text().toUpperCase().trim().replace(cardNameRegex, \"\"),\r\n                            count: parseInt($(this).find(\".card-count\").text(), 10)\r\n                        })\r\n                    })\r\n\r\n                    results.push({\r\n                        pilot: username,\r\n                        url: url,\r\n                        deck: deck\r\n                    });\r\n                });\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    return results\r\n};\r\n"]},"metadata":{},"sourceType":"module"}