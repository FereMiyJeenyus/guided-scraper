{"ast":null,"code":"import _objectSpread from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Git\\\\guided-scraper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"semantic-ui-css/semantic.min.css\";import{Header,Container,Grid,Input,Button,Form,List,Modal,Message,Progress}from'semantic-ui-react';import'./App.css';import{getDecksFromUrl}from'./scraper';var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasScraped=_useState2[0],setHasScraped=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),wotcUrl=_useState4[0],setWotcUrl=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),markup=_useState8[0],setMarkup=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),displayedDeck=_useState10[0],setDisplayedDeck=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),displayedDeckIndex=_useState12[0],setDisplayedDeckIndex=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),modalOpen=_useState14[0],setModalOpen=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),scrapeError=_useState16[0],setScrapeError=_useState16[1];useEffect(function(){if(results&&!hasScraped){setDisplayedDeck(results[0]);setDisplayedDeckIndex(0);}},[results,hasScraped]);var generateMarkupLine=function generateMarkupLine(result){var deck=result.deck,archetype=result.archetype,pilot=result.pilot,duplicatePilot=result.duplicatePilot,url=result.url;var muUrl=\"[\".concat(archetype||'archetype',\"](\").concat(url,\")\");var muPilot=\"**\".concat(pilot.replace(/[_]/g,\"\\\\_\")).concat(duplicatePilot?\" (duplicate pilot, link points to other list)\":\"\",\"**\");var highlights=[].concat(_toConsumableArray(deck.maindeck.filter(function(c){return c.highlighted;})),_toConsumableArray(deck.sideboard.filter(function(c){return c.highlighted;}))).map(function(c){return c.name;});var muHighlights=\"(\".concat(Array.from(new Set(highlights)).join(\", \"),\")\");return\"* \".concat(muUrl,\": \").concat(muPilot,\" \").concat(highlights.length?muHighlights:\"\");};var generateMarkup=function generateMarkup(results){var mu=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=results[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var result=_step.value;var muString=generateMarkupLine(result);mu.push(muString);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}setMarkup(mu);};var generateCardCounts=function generateCardCounts(results){var cardCounts=[];results.forEach(function(r){r.deck.maindeck.forEach(function(card){var countRow=cardCounts.find(function(c){return c.card.name===card.name;});if(!countRow){cardCounts.push({card:{name:card.name,count:card.count,highlighted:false},decks:1});}else{countRow.card.count+=card.count;countRow.decks++;}});r.deck.sideboard.forEach(function(card){var countRow=cardCounts.find(function(c){return c.card.name===card.name;});if(!countRow){cardCounts.push({card:{name:card.name,count:card.count,highlighted:false},decks:1});}else{countRow.card.count+=card.count;if(!r.deck.maindeck.find(function(c){return c.name===card.name;})){countRow.decks++;}}});});cardCounts.sort(function(a,b){return b.card.count-a.card.count;});//TODO make this visible somewhere\n};var scrape=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var scrapedResults;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getDecksFromUrl(wotcUrl);case 3:scrapedResults=_context.sent;generateMarkup(scrapedResults);generateCardCounts(scrapedResults);setResults(scrapedResults);setHasScraped(true);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);setScrapeError(true);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function scrape(){return _ref.apply(this,arguments);};}();var toggleCardHighlight=function toggleCardHighlight(card){var _ref2=displayedDeck,deck=_ref2.deck;var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=deck.maindeck[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var c=_step2.value;if(c.name===card.name){c.highlighted=!c.highlighted;}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=deck.sideboard[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var _c=_step3.value;if(_c.name===card.name){_c.highlighted=!_c.highlighted;}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return!=null){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}setDisplayedDeck(_objectSpread({},displayedDeck,{deck:deck}));};var cards=displayedDeck&&displayedDeck.deck.maindeck.map(function(card){return React.createElement(List.Item,{key:card.name,onClick:function onClick(){return toggleCardHighlight(card);},className:card.highlighted?'highlight':''},card.count,\" \",card.name);});var sideboardCards=displayedDeck&&displayedDeck.deck.sideboard.map(function(card){return React.createElement(List.Item,{key:card.name,onClick:function onClick(){return toggleCardHighlight(card);},className:card.highlighted?'highlight':''},card.count,\" \",card.name);});var setNextDeck=function setNextDeck(){if(!displayedDeck){return;}var index=displayedDeckIndex;var res=_toConsumableArray(results);res[index]=displayedDeck;setResults(res);var mu=markup;mu[index]=generateMarkupLine(displayedDeck);setMarkup(mu);if(index+2<results.length){console.log(results[index]);setDisplayedDeck(results[index+1]);setDisplayedDeckIndex(index+1);}else{setModalOpen(false);}};var setPreviousDeck=function setPreviousDeck(){if(!displayedDeck){return;}var index=displayedDeckIndex;var res=_toConsumableArray(results);res[index]=displayedDeck;setResults(res);var mu=_toConsumableArray(markup);mu[index]=generateMarkupLine(displayedDeck);setMarkup(mu);if(index!==0){console.log(results[index-1]);setDisplayedDeck(results[index-1]);setDisplayedDeckIndex(index-1);}else{setModalOpen(false);}};var handleSetArchetype=function handleSetArchetype(e,data){var value=data.value;var deck=_objectSpread({},displayedDeck,{archetype:value});console.log(deck);setDisplayedDeck(deck);};var handleKeyPress=function handleKeyPress(e,data){if(e.key==='Enter'){setNextDeck();}};return React.createElement(Container,{className:\"App\"},React.createElement(Header,null,\"Scraper\"),React.createElement(Grid,{columns:16},React.createElement(Grid.Row,null,React.createElement(Grid.Column,{width:3,textAlign:\"left\"},React.createElement(Input,{value:wotcUrl,onChange:function onChange(e){return setWotcUrl(e.target.value);},placeholder:\"Deck Dump URL\"}),React.createElement(\"a\",{href:\"https://magic.wizards.com/en/content/deck-lists-magic-online-products-game-info\",target:\"_blank\",style:{marginLeft:'1em'}},\"MTGO Results\")),React.createElement(Grid.Column,{width:2,textAlign:\"left\"},React.createElement(Button,{onClick:scrape,content:\"Scrape\"})),React.createElement(Grid.Column,{width:2,textAlign:\"left\"},React.createElement(Button,{onClick:function onClick(){return setModalOpen(true);},content:\"Start\"}))),React.createElement(Grid.Row,null,React.createElement(Grid.Column,{width:16},scrapeError&&React.createElement(Message,{negative:true},React.createElement(\"p\",null,\"There was an error while attempting to scrape results. Please try again later\")),React.createElement(Form,null,React.createElement(Form.TextArea,{value:markup===null||markup===void 0?void 0:markup.join(\"\\r\\n\"),style:{height:500}}))))),React.createElement(Modal,{open:modalOpen&&!!displayedDeck,centered:false,onClose:function onClose(){return setModalOpen(false);},closeOnDimmerClick:false,closeIcon:true},React.createElement(Modal.Content,null,displayedDeck&&React.createElement(Grid,{width:16},React.createElement(Grid.Row,null,React.createElement(Grid.Column,{width:12},React.createElement(Input,{label:\"Archetype\",value:displayedDeck.archetype,onChange:handleSetArchetype,onKeyPress:handleKeyPress})),React.createElement(Grid.Column,{width:2},React.createElement(Button,{onClick:setPreviousDeck,content:\"Previous\"})),React.createElement(Grid.Column,{width:2},React.createElement(Button,{onClick:setNextDeck,content:\"Next\"}))),React.createElement(Grid.Row,null,React.createElement(Grid.Column,{width:4},React.createElement(List,null,cards)),React.createElement(Grid.Column,{width:4},React.createElement(List,null,sideboardCards)))),React.createElement(Progress,{value:displayedDeckIndex,total:results.length,progress:\"ratio\",style:{marginTop:'1em',marginBottom:0}}))));};export default App;","map":{"version":3,"sources":["C:/Git/guided-scraper/src/App.tsx"],"names":["React","useState","useEffect","Header","Container","Grid","Input","Button","Form","List","Modal","Message","Progress","getDecksFromUrl","App","hasScraped","setHasScraped","wotcUrl","setWotcUrl","results","setResults","markup","setMarkup","displayedDeck","setDisplayedDeck","displayedDeckIndex","setDisplayedDeckIndex","modalOpen","setModalOpen","scrapeError","setScrapeError","generateMarkupLine","result","deck","archetype","pilot","duplicatePilot","url","muUrl","muPilot","replace","highlights","maindeck","filter","c","highlighted","sideboard","map","name","muHighlights","Array","from","Set","join","length","generateMarkup","mu","muString","push","generateCardCounts","cardCounts","forEach","r","card","countRow","find","count","decks","sort","a","b","scrape","scrapedResults","toggleCardHighlight","cards","sideboardCards","setNextDeck","index","res","console","log","setPreviousDeck","handleSetArchetype","e","data","value","handleKeyPress","key","target","marginLeft","height","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react';\nimport \"semantic-ui-css/semantic.min.css\"\nimport { Header, Container, Grid, Input, Button, TextArea, Form, Divider, List, Modal, GridColumn, Message, Progress } from 'semantic-ui-react'\nimport './App.css';\nimport { getDecksFromUrl } from './scraper'\nimport { Result, Card, Deck } from './types'\nimport DeckList from './DeckList'\n\nconst App: React.FC = () => {\n  const [hasScraped, setHasScraped] = useState<boolean>(false)\n  const [wotcUrl, setWotcUrl] = useState<string>(\"\");\n  const [results, setResults] = useState<Result[]>([]);\n  const [markup, setMarkup] = useState<string[]>([]);\n  const [displayedDeck, setDisplayedDeck] = useState<Result>();\n  const [displayedDeckIndex, setDisplayedDeckIndex] = useState<number>();\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n  const [scrapeError, setScrapeError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (results && !hasScraped) {\n      setDisplayedDeck(results[0])\n      setDisplayedDeckIndex(0)\n    }\n  }, [results, hasScraped]);\n\n  const generateMarkupLine = (result: Result): string => {\n    const { deck, archetype, pilot, duplicatePilot, url } = result\n\n    const muUrl = `[${archetype || 'archetype'}](${url})`\n    const muPilot = `**${pilot.replace(/[_]/g, \"\\\\_\")}${\n      duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"}**`\n\n    const highlights = [...deck.maindeck.filter(c => c.highlighted), ...deck.sideboard.filter(c => c.highlighted)].map(c => c.name)\n    const muHighlights = `(${Array.from(new Set(highlights)).join(\", \")})`\n    return `* ${muUrl}: ${muPilot} ${highlights.length ? muHighlights : \"\"}`\n  }\n\n  const generateMarkup = (results: Result[]) => {\n    const mu: string[] = [];\n    for (const result of results) {\n      const muString = generateMarkupLine(result)\n      mu.push(muString)\n    }\n    setMarkup(mu);\n  }\n\n  const generateCardCounts = (results: Result[]) => {\n    const cardCounts: { card: Card, decks: number }[] = []\n    results.forEach(r => {\n      r.deck.maindeck.forEach(card => {\n        const countRow = cardCounts.find(c => c.card.name === card.name);\n        if (!countRow) {\n          cardCounts.push({\n            card: { name: card.name, count: card.count, highlighted: false },\n            decks: 1\n          })\n        }\n        else {\n          countRow.card.count += card.count;\n          countRow.decks++;\n        }\n      })\n\n      r.deck.sideboard.forEach(card => {\n        const countRow = cardCounts.find(c => c.card.name === card.name);\n        if (!countRow) {\n          cardCounts.push({\n            card: { name: card.name, count: card.count, highlighted: false },\n            decks: 1\n          })\n        }\n        else {\n          countRow.card.count += card.count;\n          if (!r.deck.maindeck.find(c => c.name === card.name)) {\n            countRow.decks++;\n          }\n        }\n      })\n    })\n\n    cardCounts.sort((a, b) => b.card.count - a.card.count)\n    //TODO make this visible somewhere\n  }\n\n\n  const scrape = async () => {\n    try {\n      const scrapedResults = await getDecksFromUrl(wotcUrl);\n      generateMarkup(scrapedResults);\n      generateCardCounts(scrapedResults);\n      setResults(scrapedResults);\n      setHasScraped(true);\n    } catch (error) {\n      setScrapeError(true)\n    }\n  }\n\n  const toggleCardHighlight = (card: Card) => {\n    const { deck } = displayedDeck!\n    for (const c of deck.maindeck) {\n      if (c.name === card.name) {\n        c.highlighted = !c.highlighted\n      }\n    }\n    for (const c of deck.sideboard) {\n      if (c.name === card.name) {\n        c.highlighted = !c.highlighted\n      }\n    }\n    setDisplayedDeck({ ...displayedDeck!, deck })\n  }\n\n  const cards = displayedDeck && displayedDeck.deck.maindeck.map((card: Card) => {\n    return (\n      <List.Item key={card.name} onClick={() => toggleCardHighlight(card)} className={card.highlighted ? 'highlight' : ''}>\n        {card.count} {card.name}\n      </List.Item>\n    )\n  })\n\n  const sideboardCards = displayedDeck && displayedDeck.deck.sideboard.map((card: Card) => {\n    return (\n      <List.Item key={card.name} onClick={() => toggleCardHighlight(card)} className={card.highlighted ? 'highlight' : ''}>\n        {card.count} {card.name}\n      </List.Item>\n    )\n  })\n\n  const setNextDeck = () => {\n    if (!displayedDeck) {\n      return\n    }\n    const index = displayedDeckIndex!\n\n    const res = [...results]\n    res[index] = displayedDeck;\n    setResults(res);\n\n    const mu = markup\n    mu[index] = generateMarkupLine(displayedDeck)\n    setMarkup(mu)\n    if (index + 2 < results.length) {\n      console.log(results[index])\n      setDisplayedDeck(results[index + 1])\n      setDisplayedDeckIndex(index + 1);\n    }\n    else {\n      setModalOpen(false);\n    }\n  }\n\n  const setPreviousDeck = () => {\n    if (!displayedDeck) {\n      return\n    }\n    const index = displayedDeckIndex!\n\n    const res = [...results]\n    res[index] = displayedDeck;\n    setResults(res);\n\n    const mu = [...markup]\n    mu[index] = generateMarkupLine(displayedDeck)\n    setMarkup(mu)\n\n    if (index !== 0) {\n      console.log(results[index - 1])\n      setDisplayedDeck(results[index - 1])\n      setDisplayedDeckIndex(index - 1);\n    }\n    else {\n      setModalOpen(false);\n    }\n  }\n\n  const handleSetArchetype = (e: ChangeEvent, data: any) => {\n    const { value } = data\n    const deck: Result = { ...displayedDeck!, archetype: value as string }\n    console.log(deck)\n    setDisplayedDeck(deck)\n  }\n\n\n  const handleKeyPress = (e: any, data: any) => {\n    if (e.key === 'Enter') {\n      setNextDeck();\n    }\n  }\n\n  return (\n    <Container className=\"App\">\n      <Header>Scraper</Header>\n      <Grid columns={16}>\n        <Grid.Row>\n          <Grid.Column width={3} textAlign=\"left\">\n            <Input value={wotcUrl} onChange={(e) => setWotcUrl(e.target.value)} placeholder=\"Deck Dump URL\" />\n            <a\n              href='https://magic.wizards.com/en/content/deck-lists-magic-online-products-game-info'\n              target='_blank'\n              style={{ marginLeft: '1em' }}>\n              MTGO Results\n            </a>\n          </Grid.Column>\n          <Grid.Column width={2} textAlign=\"left\">\n            <Button onClick={scrape} content=\"Scrape\" />\n          </Grid.Column>\n          <Grid.Column width={2} textAlign=\"left\">\n            <Button onClick={() => (setModalOpen(true))} content=\"Start\" />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column width={16}>\n            {scrapeError &&\n              <Message negative>\n                <p>There was an error while attempting to scrape results. Please try again later</p>\n              </Message>\n            }\n            <Form>\n              <Form.TextArea value={markup?.join(\"\\r\\n\")} style={{ height: 500 }} />\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Modal\n        open={modalOpen && !!displayedDeck}\n        centered={false}\n        onClose={() => setModalOpen(false)}\n        closeOnDimmerClick={false}\n        closeIcon>\n        <Modal.Content>\n          {displayedDeck &&\n            <Grid width={16} >\n              <Grid.Row>\n                <Grid.Column width={12}>\n                  <Input label=\"Archetype\" value={displayedDeck.archetype} onChange={handleSetArchetype} onKeyPress={handleKeyPress} />\n                </Grid.Column>\n                <Grid.Column width={2}>\n                  <Button onClick={setPreviousDeck} content=\"Previous\" />\n                </Grid.Column>\n                <Grid.Column width={2}>\n                  <Button onClick={setNextDeck} content=\"Next\" />\n                </Grid.Column>\n              </Grid.Row>\n\n              <Grid.Row>\n                <Grid.Column width={4}>\n                  <List>\n                    {cards}\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                  <List>\n                    {sideboardCards}\n                  </List>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          }\n          <Progress value={displayedDeckIndex} total={results.length} progress='ratio' style={{ marginTop: '1em', marginBottom: 0 }} />\n        </Modal.Content>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}