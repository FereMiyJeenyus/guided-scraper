{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\guided-scraper\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [hasScraped, setHasScraped] = useState(false);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Git/guided-scraper/src/App.tsx"],"names":["React","useState","App","hasScraped","setHasScraped"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAU,KAAV,CAA5C;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID,CAND;;AAQA,eAAeC,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [hasScraped, setHasScraped] = useState<boolean>(false)\n  return (\n    <div className=\"App\">\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}