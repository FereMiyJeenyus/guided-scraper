{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\guided-scraper\\\\src\\\\App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Header, Container, Grid, Input, Button, Form, List } from 'semantic-ui-react';\nimport './App.css';\nimport { getDecksFromUrl } from './scraper';\n\nconst App = () => {\n  const [hasScraped, setHasScraped] = useState(false);\n  const [wotcUrl, setWotcUrl] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [markup, setMarkup] = useState(\"\");\n  const [displayedDeck, setDisplayedDeck] = useState();\n  const [displayedDeckIndex, setDisplayedDeckIndex] = useState();\n  useEffect(() => {\n    if (hasScraped) {\n      setDisplayedDeck(results[0]);\n      setDisplayedDeckIndex(0);\n    }\n  }, [hasScraped]);\n\n  const generateMarkup = results => {\n    const mu = [];\n\n    for (const result of results) {\n      mu.push(wotcUrl.includes('events/coverage') ? `* [${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[1]}](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[0]}${result.duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"}**` : `* [${result.archetype || 'archetype'}](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\")}${result.duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"}**`);\n    }\n\n    setMarkup(mu.join(\"\\r\\n\"));\n  };\n\n  const scrape = async () => {\n    const scrapedResults = await getDecksFromUrl(wotcUrl);\n    generateMarkup(scrapedResults);\n    setHasScraped(true);\n    setResults(scrapedResults);\n  };\n\n  const cards = displayedDeck && displayedDeck.deck.maindeck.map(card => {\n    return React.createElement(List.Item, {\n      key: card.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, card.count, \" \", card.name);\n  });\n\n  const setNextDeck = () => {\n    setDisplayedDeck(results[displayedDeckIndex + 1]);\n    setDisplayedDeckIndex(displayedDeckIndex + 1);\n  };\n\n  const handleSetArchtype = e => {\n    setDisplayedDeck({ ...displayedDeck\n    });\n    setResults;\n  };\n\n  return React.createElement(Container, {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Scraper\"), React.createElement(Grid, {\n    columns: 2,\n    divided: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: wotcUrl,\n    onChange: e => setWotcUrl(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: scrape,\n    content: \"Scrape\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"https://magic.wizards.com/en/content/deck-lists-magic-online-products-game-info\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"MTGO Results\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, displayedDeck && React.createElement(Container, {\n    className: \"Deck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"archtype\",\n    value: displayedDeck.archetype,\n    onChange: handleSetArchtype,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: setNextDeck,\n    content: \"Next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, cards))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Form.TextArea, {\n    value: markup,\n    style: {\n      width: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Git/guided-scraper/src/App.tsx"],"names":["React","useState","useEffect","Header","Container","Grid","Input","Button","Form","List","getDecksFromUrl","App","hasScraped","setHasScraped","wotcUrl","setWotcUrl","results","setResults","markup","setMarkup","displayedDeck","setDisplayedDeck","displayedDeckIndex","setDisplayedDeckIndex","generateMarkup","mu","result","push","includes","pilot","replace","split","url","duplicatePilot","archetype","join","scrape","scrapedResults","cards","deck","maindeck","map","card","name","count","setNextDeck","handleSetArchtype","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"semantic-ui-css/semantic.min.css\"\nimport { Header, Container, Grid, Input, Button, TextArea, Form, Divider, List } from 'semantic-ui-react'\nimport './App.css';\nimport { getDecksFromUrl } from './scraper'\nimport { Result, Card } from './types'\nimport DeckList from './DeckList'\n\nconst App: React.FC = () => {\n  const [hasScraped, setHasScraped] = useState<boolean>(false)\n  const [wotcUrl, setWotcUrl] = useState<string>(\"\");\n  const [results, setResults] = useState<Result[]>([]);\n  const [markup, setMarkup] = useState<string>(\"\");\n  const [displayedDeck, setDisplayedDeck] = useState<Result>();\n  const [displayedDeckIndex, setDisplayedDeckIndex] = useState<number>();\n\n  useEffect(() => {\n    if (hasScraped) {\n      setDisplayedDeck(results[0])\n      setDisplayedDeckIndex(0)\n    }\n  }, [hasScraped]);\n\n  const generateMarkup = (results: Result[]) => {\n    const mu: string[] = [];\n    for (const result of results) {\n      mu.push(wotcUrl.includes('events/coverage') ? `* [${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[1]}](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[0]}${\n        result.duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"\n        }**` :\n        `* [${result.archetype || 'archetype'}](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\")}${\n        result.duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"\n        }**`)\n    }\n    setMarkup(mu.join(\"\\r\\n\"));\n  }\n\n  const scrape = async () => {\n    const scrapedResults = await getDecksFromUrl(wotcUrl);\n    generateMarkup(scrapedResults)\n    setHasScraped(true);\n    setResults(scrapedResults);\n  }\n\n  const cards = displayedDeck && displayedDeck.deck.maindeck.map((card: Card) => {\n    return (\n      <List.Item key={card.name}>\n        {card.count} {card.name}\n      </List.Item>\n    )\n  })\n\n  const setNextDeck = () => {\n    setDisplayedDeck(results[displayedDeckIndex! + 1])\n    setDisplayedDeckIndex(displayedDeckIndex! + 1);\n  }\n\n  const handleSetArchtype = (e) => {\n    setDisplayedDeck({ ...displayedDeck, })\n    setResults\n  }\n\n  return (\n    <Container className=\"App\">\n      <Header>Scraper</Header>\n      <Grid columns={2} divided >\n        <Grid.Row>\n          <Input value={wotcUrl} onChange={(e) => setWotcUrl(e.target.value)}></Input>\n          <Button onClick={scrape} content=\"Scrape\" />\n          <a\n            href='https://magic.wizards.com/en/content/deck-lists-magic-online-products-game-info'\n            target='_blank'>\n            MTGO Results\n          </a>\n        </Grid.Row>\n\n        <Grid.Row>\n          {displayedDeck &&\n            <Container className=\"Deck\">\n              <Input label=\"archtype\" value={displayedDeck.archetype} onChange={handleSetArchtype} />\n              <Button onClick={setNextDeck} content=\"Next\" />\n              <List>\n                {cards}\n              </List>\n            </Container>}\n        </Grid.Row>\n\n        <Grid.Row>\n          <Form>\n            <Form.TextArea value={markup} style={{ width: 900 }}></Form.TextArea>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}