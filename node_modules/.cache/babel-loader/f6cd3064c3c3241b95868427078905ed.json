{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\guided-scraper\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Header, Container, Grid, Input, Button, Form } from 'semantic-ui-react';\nimport './App.css';\nimport { getDecksFromUrl } from './scraper';\n\nconst App = () => {\n  const [hasScraped, setHasScraped] = useState(false);\n  const [wotcUrl, setWotcUrl] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [markup, setMarkup] = useState(\"\");\n\n  const generateMarkup = results => {\n    const mu = [];\n\n    for (const result of results) {\n      mu.push(wotcUrl.includes('events/coverage') ? `* [${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[1]}](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[0]}${result.duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"}**` : `* [archetype](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\")}${result.duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"}**`);\n    }\n\n    setMarkup(mu.join(\"\\r\\n\"));\n  };\n\n  const scrape = async () => {\n    const scrapedResults = await getDecksFromUrl(wotcUrl);\n    generateMarkup(scrapedResults);\n    setResults(scrapedResults);\n  };\n\n  return React.createElement(Container, {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Scraper\"), React.createElement(Grid, {\n    columns: 2,\n    divided: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: wotcUrl,\n    onChange: e => setWotcUrl(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: scrape,\n    content: \"Scrape\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"https://magic.wizards.com/en/content/deck-lists-magic-online-products-game-info\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"MTGO Results\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, results.length > 0 && React.createElement(Container, {\n    className: \"Deck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(List, {\n    items: deck.maindeck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, cards))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form.TextArea, {\n    value: markup,\n    style: {\n      width: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Git/guided-scraper/src/App.tsx"],"names":["React","useState","Header","Container","Grid","Input","Button","Form","getDecksFromUrl","App","hasScraped","setHasScraped","wotcUrl","setWotcUrl","results","setResults","markup","setMarkup","generateMarkup","mu","result","push","includes","pilot","replace","split","url","duplicatePilot","join","scrape","scrapedResults","e","target","value","length","deck","maindeck","cards","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"semantic-ui-css/semantic.min.css\"\nimport { Header, Container, Grid, Input, Button, TextArea, Form, Divider } from 'semantic-ui-react'\nimport './App.css';\nimport { getDecksFromUrl } from './scraper'\nimport { Result } from './types'\nimport DeckList from './DeckList'\n\nconst App: React.FC = () => {\n  const [hasScraped, setHasScraped] = useState<boolean>(false)\n  const [wotcUrl, setWotcUrl] = useState<string>(\"\");\n  const [results, setResults] = useState<Result[]>([]);\n  const [markup, setMarkup] = useState<string>(\"\");\n\n  const generateMarkup = (results: Result[]) => {\n    const mu: string[] = [];\n    for (const result of results) {\n      mu.push(wotcUrl.includes('events/coverage') ? `* [${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[1]}](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\").split(' - ')[0]}${\n        result.duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"\n        }**` :\n        `* [archetype](${result.url}): **${result.pilot.replace(/[_]/g, \"\\\\_\")}${\n        result.duplicatePilot ? \" (duplicate pilot, link points to other list)\" : \"\"\n        }**`)\n    }\n    setMarkup(mu.join(\"\\r\\n\"));\n  }\n\n  const scrape = async () => {\n    const scrapedResults = await getDecksFromUrl(wotcUrl);\n    generateMarkup(scrapedResults)\n    setResults(scrapedResults);\n  }\n\n  return (\n    <Container className=\"App\">\n      <Header>Scraper</Header>\n      <Grid columns={2} divided >\n        <Grid.Row>\n          <Input value={wotcUrl} onChange={(e) => setWotcUrl(e.target.value)}></Input>\n          <Button onClick={scrape} content=\"Scrape\" />\n          <a\n            href='https://magic.wizards.com/en/content/deck-lists-magic-online-products-game-info'\n            target='_blank'>\n            MTGO Results\n          </a>\n        </Grid.Row>\n\n        <Grid.Row>\n          {results.length > 0 &&\n            <Container className=\"Deck\">\n              <List items={deck.maindeck}>\n                {cards}\n              </List>\n            </Container>}\n        </Grid.Row>\n\n        <Grid.Row>\n          <Form>\n            <Form.TextArea value={markup} style={{ width: 900 }}></Form.TextArea>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}